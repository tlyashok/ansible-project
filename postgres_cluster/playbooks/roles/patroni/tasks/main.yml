---
- name: Ensure Patroni directories exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: postgres
    group: postgres
    mode: "0755"
  loop:
    - "{{ patroni_conf_dir }}"
    - "{{ patroni_log_dir }}"

- name: Create virtualenv for Patroni
  ansible.builtin.pip:
    name: pip
    state: present
    virtualenv: /opt/patroni
    virtualenv_command: "python3 -m venv"

- name: Install Patroni into virtualenv
  ansible.builtin.pip:
    name:
      - "patroni[etcd]=={{ patroni_release }}"
      - psycopg2-binary
    virtualenv: /opt/patroni

- name: Ensure ownership of venv for postgres user
  ansible.builtin.file:
    path: /opt/patroni
    state: directory
    owner: postgres
    group: postgres
    recurse: yes

- name: Render Patroni config
  ansible.builtin.template:
    src: patroni.yml.j2
    dest: "{{ patroni_conf_dir }}/patroni.yml"
    owner: postgres
    group: postgres
    mode: "0644"
  notify: Restart patroni

- name: Install systemd unit for Patroni
  ansible.builtin.template:
    src: patroni.service.j2
    dest: /etc/systemd/system/{{ patroni_service_name }}.service
    mode: "0644"
  notify: Daemon reload and restart patroni

- name: Enable and start Patroni
  ansible.builtin.systemd:
    name: "{{ patroni_service_name }}"
    enabled: yes
    state: started
