scope: "{{ cluster_name }}"
name: "{{ inventory_hostname }}"

restapi:
  listen: 0.0.0.0:8008
  connect_address: "{{ hostvars[inventory_hostname].ansible_host | default(inventory_hostname) }}:8008"

etcd3:
  hosts: "{% for h in groups['db'] -%}{{ hostvars[h].ansible_host | default(h) }}:{{ etcd_client_port }}{% if not loop.last %},{% endif %}{% endfor %}"
  protocol: http

bootstrap:
  dcs:
    ttl: 30
    loop_wait: 10
    retry_timeout: 10
    maximum_lag_on_failover: 1048576
    postgresql:
      use_pg_rewind: true
      use_slots: true
  initdb:
    - encoding: UTF8
    - data-checksums
  pg_hba:
    - host all all 0.0.0.0/0 md5
    - host replication replicator 0.0.0.0/0 md5
  users:
    postgres:
      password: "{{ superuser_password }}"
      options:
        - superuser
        - createdb
        - createrole
    replicator:
      password: "{{ replicator_password }}"
      options:
        - replication

postgresql:
  listen: 0.0.0.0:5432
  connect_address: "{{ hostvars[inventory_hostname].ansible_host | default(inventory_hostname) }}:5432"
  data_dir: "{{ pg_data_dir }}"
  bin_dir: "{{ pg_bin_dir }}"
  parameters:
    wal_level: replica
    max_wal_senders: 10
    max_replication_slots: 10
    hot_standby: "on"
  authentication:
    superuser:
      username: postgres
      password: "{{ superuser_password }}"
    replication:
      username: replicator
      password: "{{ replicator_password }}"
